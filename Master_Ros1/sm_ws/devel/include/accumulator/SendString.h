// Generated by gencpp from file accumulator/SendString.msg
// DO NOT EDIT!


#ifndef ACCUMULATOR_MESSAGE_SENDSTRING_H
#define ACCUMULATOR_MESSAGE_SENDSTRING_H

#include <ros/service_traits.h>


#include <accumulator/SendStringRequest.h>
#include <accumulator/SendStringResponse.h>


namespace accumulator
{

struct SendString
{

typedef SendStringRequest Request;
typedef SendStringResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct SendString
} // namespace accumulator


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::accumulator::SendString > {
  static const char* value()
  {
    return "131c7b16e90d7646b67a1c83cd590279";
  }

  static const char* value(const ::accumulator::SendString&) { return value(); }
};

template<>
struct DataType< ::accumulator::SendString > {
  static const char* value()
  {
    return "accumulator/SendString";
  }

  static const char* value(const ::accumulator::SendString&) { return value(); }
};


// service_traits::MD5Sum< ::accumulator::SendStringRequest> should match
// service_traits::MD5Sum< ::accumulator::SendString >
template<>
struct MD5Sum< ::accumulator::SendStringRequest>
{
  static const char* value()
  {
    return MD5Sum< ::accumulator::SendString >::value();
  }
  static const char* value(const ::accumulator::SendStringRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::accumulator::SendStringRequest> should match
// service_traits::DataType< ::accumulator::SendString >
template<>
struct DataType< ::accumulator::SendStringRequest>
{
  static const char* value()
  {
    return DataType< ::accumulator::SendString >::value();
  }
  static const char* value(const ::accumulator::SendStringRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::accumulator::SendStringResponse> should match
// service_traits::MD5Sum< ::accumulator::SendString >
template<>
struct MD5Sum< ::accumulator::SendStringResponse>
{
  static const char* value()
  {
    return MD5Sum< ::accumulator::SendString >::value();
  }
  static const char* value(const ::accumulator::SendStringResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::accumulator::SendStringResponse> should match
// service_traits::DataType< ::accumulator::SendString >
template<>
struct DataType< ::accumulator::SendStringResponse>
{
  static const char* value()
  {
    return DataType< ::accumulator::SendString >::value();
  }
  static const char* value(const ::accumulator::SendStringResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // ACCUMULATOR_MESSAGE_SENDSTRING_H
